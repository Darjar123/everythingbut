<?php
global $base_url;
global $head_title;
global $product_entity;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\UrlHelper;
use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\block\Entity\Block;



function evockan_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $suggestions[] = 'page__node__' . $node->getType();
    }
}
function evockan_theme_suggestions_block_alter(array &$suggestions, array $variables) { 
    // Block suggestions for custom block bundles. 
    if (isset($variables['elements']['content']['#block_content'])) { 
        array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle()); 
    }
}
function evockan_theme_suggestions_input_alter(&$suggestions, array $variables) {
    $element = $variables['element'];
    if (isset($element['#attributes']['data-webform-submit'])) {
        $suggestions[] = 'input__' . $element['#type'] . '__' . $element['#attributes']['data-webform-submit'];
    }

    elseif (isset($element['#attributes']['data-simplenews-submit'])){
        $suggestions[] = 'input__' . $element['#type'] . '__' . $element['#attributes']['data-simplenews-submit'];
    }
}

function evockan_preprocess_block(&$variables) {
    
    global $base_url;

    switch ($variables['base_plugin_id']) {
        case 'system_branding_block':
            $variables['site_logo'] = '';
            if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
                $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
            }
            break;
    }


    if (isset($variables['elements']['#id']) && !empty($variables['elements']['#id'])) {
        $block_id   = $variables['elements']['#id'];
        $block      = \Drupal\block\Entity\Block::load($block_id);
        if ($block->getRegion()) {
            $region = $block->getRegion();
            $variables['region'] = $region;
        }
        //config as context module
    } else {
        $variables['region'] = $variables['elements']['#configuration']['region'];
    }
}


function evockan_preprocess_node(&$variables) {

    global $base_root;

    $variables['base_root'] = $base_root;
    $ntype = $variables['node']->getType();
    $site_name = \Drupal::config('system.site')->get('name');
    $variables['site_name'] = $site_name;
    $request = \Drupal::request();

    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
        $variables['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
    }   
}


/**
 * Implements template_preprocess_html().
 */
function evockan_preprocess_html(&$variables) {

    global $base_url, $head_title;

    $head_title = $variables['head_title'];
    $theme      = \Drupal::theme()->getActiveTheme()->getName();
    $variables['attributes']['class'][] = 'ltr';
    $variables['general_setting_tracking_code'] = theme_get_setting('general_setting_tracking_code', $theme);
    $variables['custom_css'] = theme_get_setting('custom_css', $theme);
    $node       = \Drupal::routeMatch()->getParameter('node');
    $variables['theme_path'] = drupal_get_path('theme', $theme);
    //$variables['#attached']['library'][] = 'evockan/evockan-lib';
    $variables['#attached']['drupalSettings']['path']['themeUrl'] = base_path().\Drupal::theme()->getActiveTheme()->getPath();
   
}


/**
 * Implements template_preprocess_page().
 */
function evockan_preprocess_page(&$variables) {

    global $base_root, $base_url;

    $node   = \Drupal::routeMatch()->getParameter('node');
    $theme  = \Drupal::theme()->getActiveTheme()->getName();
    $variables['theme_path'] = drupal_get_path('theme', $theme);
    $variables['base_url'] = $base_url;
    $request = \Drupal::request();

    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
        $variables['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
    }
        
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $variables['type'] = $node->getType();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
        $term_id = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
        $term = taxonomy_term_load($term_id);
        //$term_name = $term_object->get('name')->value;
        //$vname = $term->vid->getValue()[0]['target_id'];
        //$variables['current_term_view'] = $term;

        $vv = $term->vid->getValue();
        $vp = $vv[0];
        $vn = $vp['target_id'];
        $vname = $vn;
        $variables['v_name'] = $vname;
        $current_term_id = $term_id;

    

       
    }
}


function evockan_form_search_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){

    unset($form['search_block_form']['#title']); // remove label form
    $form['keys']['#attributes']['placeholder'][] = 'Search...';
    $form['actions']['submit']['#value'] = t(''); // Change the text on the submit button
    $form['#attributes']['class'] = array('evockan-search');
    unset($form['#attributes']['id']) ;
    $form['actions']['submit']['#attributes']['data-webform-submit'] = 'search_submit';
}


function evockan_preprocess(&$variables){
    global $product_entity;

    global $base_root, $base_url;

    $node   = \Drupal::routeMatch()->getParameter('node');
    $theme  = \Drupal::theme()->getActiveTheme()->getName();
    $variables['theme_path'] = drupal_get_path('theme', $theme);
    $variables['base_url'] = $base_url;
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
    $variables['type'] = '';
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $variables['type'] = $node->getType();
    }

    // xóa cache của url
    $variables['#cache']['contexts'][] = 'url';
    
    // switcher
    $variables['switcher_enable'] = theme_get_setting('switcher_enable','evockan');
    $variables['color_primary'] = theme_get_setting('color_primary','evockan');
    $variables['header_layout'] = theme_get_setting('header_layout','evockan');
    $variables['footer_layout'] = theme_get_setting('footer_layout','evockan');

    $variables['page_title_layout'] = theme_get_setting('page_title_layout', 'evockan');


    $variables['portfolio_layout'] = theme_get_setting('portfolio_layout','evockan');
    $variables['portfolio_columns'] = theme_get_setting('portfolio_columns','evockan');
    $variables['portfolio_hover'] = theme_get_setting('portfolio_hover','evockan');

    $variables['gallery_layout'] = theme_get_setting('gallery_layout','evockan');
    $variables['gallery_hover'] = theme_get_setting('gallery_hover','evockan');

    // Background in html.html.twig field
    $background_image = theme_get_setting('background_image','evockan');
    if (!empty($background_image)) {
        $file   = file_load($background_image[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['theme_background_image'] = $path;
    } else {
        $variables['theme_background_image'] = '';
    }
    

   
    $variables['blog_layout']               = theme_get_setting('blog_layout', 'evockan');

    $variables['blog_sidebar']              = theme_get_setting('blog_sidebar', 'evockan');

    $variables['blog_single_sidebar']       = theme_get_setting('blog_single_sidebar', 'evockan');

    $variables['header_video_url']       =theme_get_setting('video_url', 'evockan');

    if (theme_get_setting('shop_layout', 'evockan')){
        $variables['shop_layout'] = theme_get_setting('shop_layout', 'evockan');
    }else{
        $variables['shop_layout'] = 'list';
    }

    if (isset( $_GET['layout'] )){
        $variables['blog_layout']   = $_GET['layout'];
        $variables['portfolio_layout'] = $_GET['layout'];
        $variables['gallery_layout'] = $_GET['layout'];
        $variables['shop_layout'] = $_GET['layout'];
    }

    if (isset( $_GET['columns'] )){
        $variables['portfolio_columns']  = $_GET['columns'];
    }
    if (isset( $_GET['hover'] )){
        $variables['portfolio_hover']  = $_GET['hover'];
        $variables['gallery_hover'] = $_GET['hover'];
    }
    if (isset( $_GET['sidebar'] )){
        $variables['blog_sidebar']  = $_GET['sidebar'];
    }

          // Background in html.html.twig field
    $background = theme_get_setting('breadcrumb_image', 'evockan');
    if (!empty($background)) {
        $file   = file_load($background[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['field_breadcrumb_image'] = $path;
    } else {
        $variables['field_breadcrumb_image'] = '';
    }

    if(\Drupal::routeMatch()->getParameter('node')){
        $node = \Drupal::routeMatch()->getParameter('node');
        if (isset($node->field_sidebar) && !empty($node->field_sidebar->getValue()[0]['value'])) {
            $variables['blog_single_sidebar'] = $node->field_sidebar->getValue()[0]['value'];
            $variables['sidebar'] = $node->field_sidebar->getValue()[0]['value'];
        }
        if (isset($node->field_header_layout) && !empty($node->field_header_layout->getValue()[0]['value'])) {
            $variables['header_layout'] = $node->field_header_layout->getValue()[0]['value'];
        }
        if (isset($node->field_footer_layout ) && !empty($node->field_footer_layout->getValue()[0]['value'])) {
            $variables['footer_layout'] = $node->field_footer_layout->getValue()[0]['value'];
        }
        if (isset($node->field_page_title_layout ) && !empty($node->field_page_title_layout->getValue()[0]['value'])) {
            $variables['page_title_layout'] = $node->field_page_title_layout->getValue()[0]['value'];
        }
        if (isset($node->field_video_url ) && !empty($node->field_video_url->getValue()[0]['value'])) {
            $variables['header_video_url'] = $node->field_video_url->getValue()[0]['value'];
        }


        ///////////////////////////////////////
        if(isset($node->field_breadcrumb_image) && !empty($node->field_breadcrumb_image)){
            $field_image = $node->field_breadcrumb_image;
            //kint($field_images);
            // If a file has been uploaded, get it.

            $first = $field_image->first();
            if(isset($first) && !empty($first)){

                
                //kint($image);
                $path = $first->entity->uri->value;
                $image_bg = file_create_url($path);
                
                $variables['field_breadcrumb_image'] = $image_bg;
                
            // Otherwise get the default if there is one.
            } else {

                $default_image = $node->field_breadcrumb_image->getFieldDefinition()->getSetting('default_image');

                $file = Drupal::service('entity.repository')->loadEntityByUuid('file', $default_image['uuid']);
                if($file){
                    $path = $file->getFileUri();
                    //$variables['background_image'] = ImageStyle::load('img_style_name')->buildUrl($path);
                    $image_bg = file_create_url($path);
                    $variables['field_breadcrumb_image'] = $image_bg;
                }
            }
        }
    }


   


    // Background por field
    $background = theme_get_setting('portfolio_breadcrumb_image', 'evockan');
    if (!empty($background)) {
        $file   = file_load($background[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['field_por_breadcrumb_image'] = $path;
    } else {
        $variables['field_por_breadcrumb_image'] = $variables['field_breadcrumb_image'];
    }

    // Background blog field
    $background = theme_get_setting('blog_breadcrumb_image', 'evockan');
    if (!empty($background)) {
        $file   = file_load($background[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['field_blog_breadcrumb_image'] = $path;
    } else {
        $variables['field_blog_breadcrumb_image'] = $variables['field_breadcrumb_image'];
    }

    // Background shop field
    $background = theme_get_setting('shop_breadcrumb_image', 'evockan');
    if (!empty($background)) {
        $file   = file_load($background[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['field_shop_breadcrumb_image'] = $path;
    } else {
        $variables['field_shop_breadcrumb_image'] = $variables['field_breadcrumb_image'];
    }
    // Background ga field
    $background = theme_get_setting('gallery_breadcrumb_image', 'evockan');
    if (!empty($background)) {
        $file   = file_load($background[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['field_gallery_breadcrumb_image'] = $path;
    } else {
        $variables['field_gallery_breadcrumb_image'] = $variables['field_breadcrumb_image'];
    }

    // Background footer field
    $background = theme_get_setting('footer_background_image', 'evockan');
    if (!empty($background)) {
        $file   = file_load($background[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['field_footer_background_image'] = $path;
    } else {
        $variables['field_footer_background_image'] = '';
    }
    // second logo field
    $background = theme_get_setting('second_logo', 'evockan');
    if (!empty($background)) {
        $file   = file_load($background[0]);
        $uri    = $file->getFileUri();
        $path   = file_create_url($uri);
        $variables['second_logo'] = $path;
    } else {
        $variables['second_logo'] = '';
    }

    //skin
    $skin = theme_get_setting('built_in_skins','evockan');
    if(isset($skin) && !empty($skin)){
        $skin = theme_get_setting('built_in_skins','evockan');
    }else{
        $skin = 'default';
    }
  
    $evockan_theme_path = base_path().drupal_get_path('theme', 'evockan');
    $variables['evockan_theme_path'] = $evockan_theme_path;
    $variables['evockan_css_skin'] = $skin;


    $pageURL = 'http';  
    if(!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on'){
        $pageURL .= "s";
    }
    $pageURL .= '://';
    if($_SERVER['SERVER_PORT'] != '80'){
    $pageURL .= $_SERVER['SERVER_NAME'].":".$_SERVER['SERVER_PORT'].$_SERVER['REQUEST_URI'];
    }else{
        $pageURL .= $_SERVER['SERVER_NAME'].$_SERVER['REQUEST_URI'];
    }
    $variables['pageURL'] = $pageURL;

}

function evockan_preprocess_menu(&$variables) {
    if ($variables['theme_hook_original'] == 'menu__main') { 
        
    }
}
function evockan_preprocess_breadcrumb(&$variables) {
    global $head_title;
    if ($variables['breadcrumb']) {
        $variables['breadcrumb'][] = array(
            'text' => $head_title['title'],
        );
    }
}

function evockan_form_contact_message_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
    unset($form['actions']['preview']);
}

function evockan_form_comment_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $form['author']['#prefix'] = '<div class="row"><div class="col-sm-6">';
    $form['author']['#suffix'] = '</div>';

    $form['author']['name']['#attributes']['placeholder'] = t( 'Name' );
    
    $form['field_email']['#prefix'] = '<div class="col-sm-6">';
    $form['field_email']['#suffix'] = '</div></div>';
    


    unset($form['actions']['preview']);
    $form['actions']['submit']['#attributes']['value'] = t('Submit Comment');
}

function evockan_form_contact_message_contact_homepage_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    // Name
    /*$form['name']['#prefix'] = '<div class="row"><div class="col-sm-6">';
    $form['name']['#suffix'] = '</div>';*/
    $form['name']['#attributes']['placeholder'][] = t($form['name']['#title'] . '*');
    /*$form['name']['#attributes']['class'][] = 'form-control';*/
    unset($form['name']['#title']);

    // Mail
    /*$form['mail']['#prefix'] = '<div class="col-sm-6">';
    $form['mail']['#suffix'] = '</div></div>';*/
    $form['mail']['#attributes']['placeholder'][] = t($form['mail']['#title'] . '*');
    /*$form['mail']['#attributes']['class'][] = 'form-control';*/
    unset($form['mail']['#title']);

    // phone
    // $form['field_phone']['#prefix'] = '<div class="row"><div class="col-sm-6">';
    // $form['field_phone']['#suffix'] = '</div>';

    // // subfect
    // $form['subject']['#prefix'] = '<div class="col-sm-6">';
    // $form['subject']['#suffix'] = '</div></div>';
    // $form['subject']['widget'][0]['value']['#attributes']['class'][] = 'form-control';
    unset($form['subject']['widget'][0]['value']['#title']);
    //// Message
    

    /*$form['message']['widget'][0]['value']['#attributes']['placeholder'][] = $form['message']['widget'][0]['#title'] . '*';*/
   /* $form['message']['widget'][0]['value']['#attributes']['class'][] = 'form-control';*/
    unset($form['message']['widget'][0]['value']['#title']);
}

function evockan_form_contact_message_free_consultation_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    // Name

    $form['name']['#attributes']['placeholder'][] = $form['name']['#title'] . '*';
    unset($form['name']['#title']);

    $form['mail']['#attributes']['placeholder'][] = $form['mail']['#title'] . '*';
    unset($form['mail']['#title']);

    unset($form['field_phone_number']['widget'][0]['value']['#title']);
  
}

function evockan_form_contact_message_feedback_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

    // Name
    /*$form['name']['#prefix'] = '<div class="row"><div class="col-sm-6">';
    $form['name']['#suffix'] = '</div>';*/
    $form['name']['#attributes']['placeholder'][] = $form['name']['#title'] . '*';
    $form['name']['#attributes']['class'][] = 'gui-input';
    unset($form['name']['#title']);

    // Mail
    /*$form['mail']['#prefix'] = '<div class="col-sm-6">';
    $form['mail']['#suffix'] = '</div></div>';
    */  
    $form['mail']['#attributes']['placeholder'][] = $form['mail']['#title'] . '*';
    $form['mail']['#attributes']['class'][] = 'gui-input';
    unset($form['mail']['#title']);

    // phone
    // $form['field_phone']['#prefix'] = '<div class="row"><div class="col-sm-6">';
    // $form['field_phone']['#suffix'] = '</div>';
    $form['field_telephone']['widget'][0]['value']['#attributes']['class'][] = 'gui-input';
    unset($form['field_telephone']['widget'][0]['value']['#title']);
    // // subfect
    // $form['subject']['#prefix'] = '<div class="col-sm-6">';
    // $form['subject']['#suffix'] = '</div></div>';
    $form['subject']['widget'][0]['value']['#attributes']['class'][] = 'gui-input';
    unset($form['subject']['widget'][0]['value']['#title']);
    //// Messag

    $form['message']['widget'][0]['value']['#attributes']['class'][] = 'gui-textarea';
    unset($form['message']['widget'][0]['value']['#title']);
    //
    //// Submit
}


function evockan_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){

    if(preg_match('/views_exposed_form/i', $form_id)){
        $form['actions']['submit']['#attributes']['class'] = array('hidden');
        $form['sort_by']['#attributes']['onchange'] = 'if(this.value != 0) { this.form.submit(); }';
    }/*elseif(preg_match("/simplenews_subscriptions_block/", $form_id)){
        unset($form['mail']['widget'][0]['value']['#description']);
        unset($form['mail']['widget'][0]['value']['#title']);
        $form['mail']['#prefix'] = '<div class="extra_div">';
        $form['mail']['widget'][0]['value']['#placeholder'] = t('Enter Your Email');
        $form['mail']['widget'][0]['value']['#attributes']['class'] = array('extra-big-input border-none');
        $form['actions']['#suffix'] = '</div>';
        $form['actions']['subscribe']['#attributes']['value'] = t('&#xf003;');
        $form['actions']['#attributes']['class'] = array('input-group-btn');
        $form['actions']['subscribe']['#attributes']['class'] = array('default-submit btn btn-large fa');
    }*/

    $path = \Drupal::request()->attributes->get('_system_path');
    $current_uri = \Drupal::request()->getRequestUri();
    $current_path = \Drupal::service('path.current')->getPath();
    //kint($current_path);
    
    if (theme_get_setting('shop_layout', 'evockan')){
        $layout = theme_get_setting('shop_layout', 'evockan');
    }else{
        $layout = 'list';
    }
    if (isset( $_GET['layout'] )){
        $layout = $_GET['layout'];
    }

    if($current_path == '/shop' and ($layout == 'classic_2_columns' or $layout == 'classic_3_columns' or $layout == 'classic_4_columns') ){
        if(preg_match('/commerce_order_item_add_to_cart_form_commerce_product/i', $form_id)){
            $form['actions']['submit']['#prefix'] = '<i class="fa fa-shopping-cart"></i>';
           /*$form['actions']['submit']['#attributes']['value'] = t('&#xf07a; Add To Cart');
           $form['actions']['submit']['#attributes']['class'] = array('fa fa-shopping-cart');*/
           $form['actions']['#attributes']['class'] = array('shop-classic-button');
        } 
    }elseif($current_path == '/shop' and ($layout == 'simple_2_columns' or $layout == 'simple_3_columns' or $layout == 'simple_4_columns') ){
        if(preg_match('/commerce_order_item_add_to_cart_form_commerce_product/i', $form_id)){
           $form['actions']['submit']['#attributes']['value'] = t('&#xe60e;');
           $form['actions']['submit']['#attributes']['class'] = array('ti-shopping-cart-full');
           
        } 
    }


    // if(preg_match('/commerce_order_item_add_to_cart_form_commerce_/i', $form_id)){
    //     $form['#attributes']['class'] = array('plash-commerce-form-add-to-cart');
    //     $form['quantity']['widget'][0]['value']['#prefix'] = t('<button type="button" class="btn btn-default quantity-plus"><i aria-hidden="true" class="fa fa-plus"></i></button>');
    //     $form['quantity']['widget'][0]['value']['#suffix'] = t('<button type="button" class="btn btn-default quantity-minus"><i aria-hidden="true" class="fa fa-minus"></i></button>');
    //     $form['quantity']['widget'][0]['value']['#min'] = 1;
    //     unset($form['quantity']['widget'][0]['value']['#title']);
    //     $form['actions']['submit']['#attributes']['value'] = t('&#xf07a; Add to cart');

    // }
}
