body {
	font-family: 'Roboto';
    font-size: 14px;
}

html {
	font-size: small;
	line-height: 1.75;
}
body {
	color: @text-color;
	background: @body-bg;
	-webkit-text-size-adjust: none;
	font-family: @font-family-base;
	font-weight: 300;
	img {
		max-width: 100%;
		-webkit-touch-callout: none;
	}
}

// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  .box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

// Set the height of file controls to match text inputs
input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}
select{
  -webkit-appearance: select;
  -webkit-border-radius: 0px !important;
}
// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  .tab-focus();
}

// Adjust output element
output {
}


.form-control {
  display: block;
  width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  .border-radius(@input-border-radius);
  //.box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  //.transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");
  outline: none;
  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();
  &:focus{
    border-color:@brand-primary;
     .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{brand-primary}");
  }
  

  // Placeholder
  //.placeholder();

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    .opacity(1); // iOS fix for unreadable disabled content
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }
}


// Base styles
// --------------------------------------------------

.btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: @btn-font-weight;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid #999999;
  white-space: nowrap;
  padding: 10px 30px;
  text-align: center;
  text-transform: uppercase;
  .user-select(none);
  outline: none;
  .border-radius(~"20px");
  font-size: 16px;
  font-weight: 300;
  &:hover,
  &:focus {
    color: @btn-default-color;
    text-decoration: none;
    // opacity: 0.7;
  }

  // &.disabled,
  // &[disabled]{
  //   cursor: not-allowed;
  //   pointer-events: none; // Future-proof disabling of clicks
  //   .opacity(.65);
  //   .box-shadow(none);
  // }
  i,
  span{
    z-index: 2;
    position: relative;
  }
}

// .btn-rounded {
// 	//default style 
// }
.btn-style-square {
 	.border-radius(0);
}
.btn-style-round {
	&,
	&:after,
	&:before{
		.border-radius(~"100px !important");
	}
}

.btn-style-outlined {
	background: none !important;
	border-width: 1px !important;
}
.btn-style-3d {
	
}

//btn Effect


// Alternate buttons
// --------------------------------------------------

.btn-default {
  .button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);
  &:hover,
  &:focus,
  &:active,
  &.active
  {
    color: #fff;
    background-color: @brand-primary;
    border-color: @brand-primary;
  }
}
.btn-primary {
  .button-variant(@btn-primary-color; @btn-primary-bg; @btn-primary-border);
  &:hover,
    &:focus,
    &:active,
    &.active
    {
      color: #fff !important;
      background-color: @brand-thirtydary;  
      border: 1px solid @brand-thirtydary;
      opacity: 1;
    }
}
.btn-secondary {
  .button-variant(@brand-thirtydary; @btn-default-bg; @btn-primary-border);
  text-transform: none;
  &:hover,
  &:focus,
  &:active,
  &.active
  {
    color: #fff;
    background-color: @brand-primary;
    border-color: @brand-primary;
  }
}

// Success appears as green
.btn-success {
  .button-variant(@btn-success-color; @btn-success-bg; @btn-success-border);
}
// Info appears as blue-green
.btn-info {
  .button-variant(@btn-info-color; @btn-info-bg; @btn-info-border);
}
// Warning appears as orange
.btn-warning {
  .button-variant(@btn-warning-color; @btn-warning-bg; @btn-warning-border);
}
// Danger and error appear as red
.btn-danger {
  .button-variant(@btn-danger-color; @btn-danger-bg; @btn-danger-border);
}
.btn-white {
  &,
  &.btn-style-outlined{
    color: #fff !important;
    background-color: rgba(0, 0, 0, 0) !important;
    border-color: #fff !important;
    &:hover,
    &:focus,
    &:active,
    &.active
    {
      color: #fff !important;
      background-color: rgba(255, 255, 255, 0.3) !important;  
    }
    //.open > .dropdown-toggle& 
    &:active,
    &.active
    {
      background-image: none;
    }
  }
}
.button-effect(~".btn-primary";@btn-primary-color; @btn-primary-bg; @btn-primary-border);
.button-effect(~".btn-success";@btn-success-color; @btn-success-bg; @btn-success-border);
.button-effect(~".btn-info";@btn-info-color; @btn-info-bg; @btn-info-border);
.button-effect(~".btn-warning";@btn-warning-color; @btn-warning-bg; @btn-warning-border);
.button-effect(~".btn-danger";@btn-danger-color; @btn-danger-bg; @btn-danger-border);

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  color: @link-color;
  font-weight: normal;
  cursor: pointer;
  border-radius: 0;

  &,
  &:active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    .box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: @link-hover-color;
    text-decoration: underline;
    background-color: transparent;
  }
  &[disabled]{
    &:hover,
    &:focus {
      color: @btn-link-disabled-color;
      text-decoration: none;
    }
  }
}


// Button Sizes
// --------------------------------------------------

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  .button-size(@padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @border-radius-large);
}
.btn-sm {
  // line-height: ensure proper height of button next to small input
  .button-size(@padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small; @border-radius-small);
}
.btn-xs {
  .button-size(@padding-xs-vertical; @padding-xs-horizontal; @font-size-small; @line-height-small; @border-radius-small);
}

.btn-align-left{

}
.btn-align-center{
	display: table;
	margin-left: auto;
	margin-right: auto;
}
.btn-align-right{
	float: right;
}



// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
