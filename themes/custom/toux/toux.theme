<?php
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
function toux_css_alter(&$css) {
    $theme_path = drupal_get_path('theme', 'toux');
    // Add googlefonts.
    $googlefonts = '//fonts.googleapis.com/css?family=Raleway:400,500,400italic,500italic,600,600italic,700,700italic,300,300italic';
    $googlefonts2 = '//fonts.googleapis.com/css?family=Roboto:400,400italic,500,500italic,700,700italic,300italic,300';
    $css[$googlefonts] = array(
    'data' => $googlefonts,
    'type' => 'external',
    'every_page' => TRUE,
    'media' => 'all',
    'preprocess' => FALSE,
    'group' => CSS_AGGREGATE_THEME,
    'browsers' => array('IE' => TRUE, '!IE' => TRUE),
    'weight' => -1,
    );
    $css[$googlefonts2] = array(
    'data' => $googlefonts2,
    'type' => 'external',
    'every_page' => TRUE,
    'media' => 'all',
    'preprocess' => FALSE,
    'group' => CSS_AGGREGATE_THEME,
    'browsers' => array('IE' => TRUE, '!IE' => TRUE),
    'weight' => -1,
    );
}
function toux_theme_suggestions_page_alter(array &$suggestions, array $vars) {
if ($node = \Drupal::routeMatch()->getParameter('node')) {
$suggestions[] = 'page__node__' . $node->getType();
}
}
function toux_preprocess_breadcrumb(&$vars) {
     if (($node = \Drupal::routeMatch()->getParameter('node')) && $vars['breadcrumb']) {
        $vars['breadcrumb'][] = array(
            'text' => $node->getTitle(),
        );
    }
}
function toux_preprocess_block(&$vars) {
global $base_url;
    switch ($vars['base_plugin_id']) {
    case 'system_branding_block':
    $vars['site_logo'] = '';
    if ($vars['content']['site_logo']['#access'] && $vars['content']['site_logo']['#uri']) {
    $vars['site_logo'] = str_replace('.svg', '.png', $vars['content']['site_logo']['#uri']);
    }
    break;
    }
    if(isset($vars['elements']['#id']) && !empty($vars['elements']['#id'])){
        $block_id = $vars['elements']['#id'];
        $block = \Drupal\block\Entity\Block::load($block_id);
        if($block->getRegion()){
            $region = $block->getRegion();
            $vars['region'] = $region;
        }
    //config as context module
    }else{
        $vars['region'] = $vars['elements']['#configuration']['region'];
    }

}
function toux_preprocess_node(&$vars) {
global $base_root;
    if (isset($_GET['style'])) {
    $vars['blog_style'] = $_GET['style'];
    } else {
    $vars['blog_style'] = theme_get_setting('blog_style', 'toux');
    } 
    ////
    $vars['base_root'] = $base_root;
    $ntype = $vars['node']->getType();

    $site_name = \Drupal::config('system.site')->get('name');
    $vars['site_name'] = $site_name;
    $request = \Drupal::request();
    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $vars['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
    }
    ///////
    if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $term_id = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
    $term = taxonomy_term_load($term_id);
    //$term_name = $term_object->get('name')->value;
    $vars['current_term'] = $term;
    }
    ////////
    if (isset($vars['node']->uc_product_image) && !empty($vars['node']->uc_product_image)) {
    foreach ( $node_value=$vars['node']->uc_product_image->getValue() as $k => $v) {

        $fid = $node_value[$k]['target_id'];
        $file = File::load($fid);
        $image_uri = ImageStyle::load('image_216x240')->buildUrl($file->getFileUri());
        $image_uri2 = ImageStyle::load('image_171x190')->buildUrl($file->getFileUri());
        $image_uri3 = ImageStyle::load('image_268x298')->buildUrl($file->getFileUri());
        $image_uri4 = ImageStyle::load('image_131x135')->buildUrl($file->getFileUri());
        $image_uri5 = ImageStyle::load('image_275x305')->buildUrl($file->getFileUri());
        $vars['img_uri_216_240'] = $image_uri;
        $vars['img_uri_171_190'] = $image_uri2;
        $vars['img_uri_268_298'] = $image_uri3;
        $vars['img_uri_131_135'] = $image_uri4;
        $vars['img_uri_275_305'] = $image_uri5;
        }
    } else {
        $vars['img_uri_216_240'] = '';
        $vars['img_uri_171_190'] = '';
        $vars['img_uri_268_298'] = '';
        $vars['img_uri_131_135'] = '';
        $vars['img_uri_275_305'] = '';
    }
    ////////
    if($node = \Drupal::routeMatch()->getParameter('node')){

        $ntype = $node->getType();
        if($ntype == 'product'){
            $product_belongs = $node->field_products_belong->getValue()[0]['value'];
            //kint($node->taxonomy_catalog->getValue());
            if($product_belongs == 'clothes'){
                $tids = array();
                foreach($node->field_categories_product_clothes->getValue() as $k => $tarr){
                    $tids[$k] = $tarr['target_id'];
                }
                $storage = \Drupal::entityManager()->getStorage('node');
                $nids = $storage->getQuery()
                    ->condition('type', 'product')
                    ->condition('status', 1)
                    ->condition('nid',$node->nid->value , '!=')
                    ->condition('field_categories_product_clothes.entity.tid', $tids, 'IN')
                    //->range(0,3)
                    ->execute();

                // $random_pds = array_rand($nids,4);
                //print_r($nids);
                //$vars['related_products'] = $storage->loadMultiple($random_pds);
                $arr_products = array();
                $config = \Drupal::config('uc_store.settings');
                $sign_currency = $config->get('currency.symbol');
                $posi = $config->get('currency.symbol_after');
                //print $posi;
                //print $sign_currency;
                foreach(entity_load_multiple('node', $nids ) as $k => $v){
                    if($posi == 1){
                        //$uc_price = $v->price->getValue()[0]['value'].$sign_currency;
                        $uc_price = (float)$v->price->getValue()[0]['value'];
                        $uc_price_fm = number_format($uc_price,2).$sign_currency;
                    }else{

                        $uc_price = (float) $v->price->getValue()[0]['value'];
                        $uc_price_fm = $sign_currency.number_format($uc_price,2);
                    }
                    //kint($v->price);
                    $fid = $v->uc_product_image->getValue()[0]['target_id'];
                    //print(file_create_url(file_load($aaa)->uri->value));
                    /////////////////////////////////////////////////////////
                    $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$v->nid->getValue()[0]['value']);
                    $node_url = ltrim($path_alias,'/');
                    //$node_url = url('node/'.$v->nid->getValue()[0]['value']);
                    //print $node_url;
                    $uri = file_load($fid)->uri->value;
                    $url = file_create_url($uri);
                    //print($url);
                    $arr_products[$k] = '<div class="item">
                                            <div class="item-inner">
                                                <div class="prd">
                                                    <div class="item-img clearfix">
                                                        <a class="product-image have-additional" href="' . $node_url . '" title="Modular Modern">
                                                            <span class="img-main">
                                                                <img alt="img" src="' . $url . '">
                                                            </span>
                                                        </a>
                                                    </div>
                                                    <div class="item-info">
                                                        <div class="info-inner">
                                                            <div class="item-title">
                                                                <a href="' . $node_url . '" title="' . $v->getTitle() . '"> ' . $v->getTitle() . ' </a>
                                                            </div>
                                                            <div class="item-price">
                                                                <div class="price-box">
                                                                    <span class="regular-price">
                                                                        <span class="price">
                                                                            <span class="price1">' . $uc_price_fm . '</span>
                                                                            
                                                                        </span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                </div>
                                            </div>
                                        </div>';            
                    }
                    $vars['related_products'] = $arr_products;
            }elseif($product_belongs == 'houseware'){
                $tids = array();
                foreach($node->field_categories_product_housewa->getValue() as $k => $tarr){
                    $tids[$k] = $tarr['target_id'];
                }
                $storage = \Drupal::entityManager()->getStorage('node');
                $nids = $storage->getQuery()
                    ->condition('type', 'product')
                    ->condition('status', 1)
                    ->condition('nid',$node->nid->value , '!=')
                    ->condition('field_categories_product_housewa.entity.tid', $tids, 'IN')
                    //->range(0,3)
                    ->execute();

                // $random_pds = array_rand($nids,4);
                //print_r($nids);
                //$vars['related_products'] = $storage->loadMultiple($random_pds);
                $arr_products = array();
                $config = \Drupal::config('uc_store.settings');
                $sign_currency = $config->get('currency.symbol');
                $posi = $config->get('currency.symbol_after');
                //print $posi;
                //print $sign_currency;
                foreach(entity_load_multiple('node', $nids ) as $k => $v){
                    if($posi == 1){
                        //$uc_price = $v->price->getValue()[0]['value'].$sign_currency;
                        $uc_price = (float)$v->price->getValue()[0]['value'];
                        $uc_price_fm = number_format($uc_price,2).$sign_currency;
                    }else{

                        $uc_price = (float) $v->price->getValue()[0]['value'];
                        $uc_price_fm = $sign_currency.number_format($uc_price,2);
                    }
                    //kint($v->price);
                    $fid = $v->uc_product_image->getValue()[0]['target_id'];
                    //print(file_create_url(file_load($aaa)->uri->value));
                    /////////////////////////////////////////////////////////
                    $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$v->nid->getValue()[0]['value']);
                    $node_url = ltrim($path_alias,'/');
                    //$node_url = url('node/'.$v->nid->getValue()[0]['value']);
                    //print $node_url;
                    $uri = file_load($fid)->uri->value;
                    $url = file_create_url($uri);
                    //print($url);
                    $arr_products[$k] = '<div class="item">
                                            <div class="item-inner">
                                                <div class="prd">
                                                    <div class="item-img clearfix">
                                                        <a class="product-image have-additional" href="' . $node_url . '" title="Modular Modern">
                                                            <span class="img-main">
                                                                <img alt="img" src="' . $url . '">
                                                            </span>
                                                        </a>
                                                    </div>
                                                    <div class="item-info">
                                                        <div class="info-inner">
                                                            <div class="item-title">
                                                                <a href="' . $node_url . '" title="' . $v->getTitle() . '"> ' . $v->getTitle() . ' </a>
                                                            </div>
                                                            <div class="item-price">
                                                                <div class="price-box">
                                                                    <span class="regular-price">
                                                                        <span class="price">
                                                                            <span class="price1">' . $uc_price_fm . '</span>
                                                                            
                                                                        </span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                </div>
                                            </div>
                                        </div>';            
                    }
                    $vars['related_products'] = $arr_products;
            }elseif($product_belongs == 'cosmetic'){
                $tids = array();
                foreach($node->field_categories_product_cosmeti->getValue() as $k => $tarr){
                    $tids[$k] = $tarr['target_id'];
                }
                $storage = \Drupal::entityManager()->getStorage('node');
                $nids = $storage->getQuery()
                    ->condition('type', 'product')
                    ->condition('status', 1)
                    ->condition('nid',$node->nid->value , '!=')
                    ->condition('field_categories_product_cosmeti.entity.tid', $tids, 'IN')
                    //->range(0,3)
                    ->execute();

                // $random_pds = array_rand($nids,4);
                //print_r($nids);
                //$vars['related_products'] = $storage->loadMultiple($random_pds);
                $arr_products = array();
                $config = \Drupal::config('uc_store.settings');
                $sign_currency = $config->get('currency.symbol');
                $posi = $config->get('currency.symbol_after');
                //print $posi;
                //print $sign_currency;
                foreach(entity_load_multiple('node', $nids ) as $k => $v){
                    if($posi == 1){
                        //$uc_price = $v->price->getValue()[0]['value'].$sign_currency;
                        $uc_price = (float)$v->price->getValue()[0]['value'];
                        $uc_price_fm = number_format($uc_price,2).$sign_currency;
                    }else{

                        $uc_price = (float) $v->price->getValue()[0]['value'];
                        $uc_price_fm = $sign_currency.number_format($uc_price,2);
                    }
                    //kint($v->price);
                    $fid = $v->uc_product_image->getValue()[0]['target_id'];
                    //print(file_create_url(file_load($aaa)->uri->value));
                    /////////////////////////////////////////////////////////
                    $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$v->nid->getValue()[0]['value']);
                    $node_url = ltrim($path_alias,'/');
                    //$node_url = url('node/'.$v->nid->getValue()[0]['value']);
                    //print $node_url;
                    $uri = file_load($fid)->uri->value;
                    $url = file_create_url($uri);
                    //print($url);
                    $arr_products[$k] = '<div class="item">
                                            <div class="item-inner">
                                                <div class="prd">
                                                    <div class="item-img clearfix">
                                                        <a class="product-image have-additional" href="' . $node_url . '" title="Modular Modern">
                                                            <span class="img-main">
                                                                <img alt="img" src="' . $url . '">
                                                            </span>
                                                        </a>
                                                    </div>
                                                    <div class="item-info">
                                                        <div class="info-inner">
                                                            <div class="item-title">
                                                                <a href="' . $node_url . '" title="' . $v->getTitle() . '"> ' . $v->getTitle() . ' </a>
                                                            </div>
                                                            <div class="item-price">
                                                                <div class="price-box">
                                                                    <span class="regular-price">
                                                                        <span class="price">
                                                                            <span class="price1">' . $uc_price_fm . '</span>
                                                                            
                                                                        </span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                </div>
                                            </div>
                                        </div>';            
                    }
                    $vars['related_products'] = $arr_products;
            }elseif($product_belongs == 'electronic'){
                $tids = array();
                foreach($node->field_categories_product_electro->getValue() as $k => $tarr){
                    $tids[$k] = $tarr['target_id'];
                }
                $storage = \Drupal::entityManager()->getStorage('node');
                $nids = $storage->getQuery()
                    ->condition('type', 'product')
                    ->condition('status', 1)
                    ->condition('nid',$node->nid->value , '!=')
                    ->condition('field_categories_product_electro.entity.tid', $tids, 'IN')
                    //->range(0,3)
                    ->execute();

                // $random_pds = array_rand($nids,4);
                //print_r($nids);
                //$vars['related_products'] = $storage->loadMultiple($random_pds);
                $arr_products = array();
                $config = \Drupal::config('uc_store.settings');
                $sign_currency = $config->get('currency.symbol');
                $posi = $config->get('currency.symbol_after');
                //print $posi;
                //print $sign_currency;
                foreach(entity_load_multiple('node', $nids ) as $k => $v){
                    if($posi == 1){
                        //$uc_price = $v->price->getValue()[0]['value'].$sign_currency;
                        $uc_price = (float)$v->price->getValue()[0]['value'];
                        $uc_price_fm = number_format($uc_price,2).$sign_currency;
                    }else{

                        $uc_price = (float) $v->price->getValue()[0]['value'];
                        $uc_price_fm = $sign_currency.number_format($uc_price,2);
                    }
                    //kint($v->price);
                    $fid = $v->uc_product_image->getValue()[0]['target_id'];
                    //print(file_create_url(file_load($aaa)->uri->value));
                    /////////////////////////////////////////////////////////
                    $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$v->nid->getValue()[0]['value']);
                    $node_url = ltrim($path_alias,'/');
                    //$node_url = url('node/'.$v->nid->getValue()[0]['value']);
                    //print $node_url;
                    $uri = file_load($fid)->uri->value;
                    $url = file_create_url($uri);
                    //print($url);
                    $arr_products[$k] = '<div class="item">
                                            <div class="item-inner">
                                                <div class="prd">
                                                    <div class="item-img clearfix">
                                                        <a class="product-image have-additional" href="' . $node_url . '" title="Modular Modern">
                                                            <span class="img-main">
                                                                <img alt="img" src="' . $url . '">
                                                            </span>
                                                        </a>
                                                    </div>
                                                    <div class="item-info">
                                                        <div class="info-inner">
                                                            <div class="item-title">
                                                                <a href="' . $node_url . '" title="' . $v->getTitle() . '"> ' . $v->getTitle() . ' </a>
                                                            </div>
                                                            <div class="item-price">
                                                                <div class="price-box">
                                                                    <span class="regular-price">
                                                                        <span class="price">
                                                                            <span class="price1">' . $uc_price_fm . '</span>
                                                                            
                                                                        </span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                </div>
                                            </div>
                                        </div>';            
                    }
                    $vars['related_products'] = $arr_products;
            }
        }
    }
    /////////
    if(\Drupal::routeMatch()->getParameter('node')){
        $node = \Drupal::routeMatch()->getParameter('node');
        $ntype = $node->getType();
        if($ntype == 'product'){
            //next post start
            $storage = \Drupal::entityManager()->getStorage('node');
            $nids = $storage->getQuery()
                ->condition('type', 'product')
                ->condition('status', 1)
                ->condition('nid',$node->nid->value, '!=')
                ->condition('changed', $node->changed->value, '>')
                ->range(0,1)
                ->execute();
            $next_post = '';
            $i = 0;
            foreach (entity_load_multiple('node',$nids) as $key => $n) {
                if($i > 0){
                    break;
                }else{
                    $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$n->nid->value);
                    $path_alias_cs = ltrim($path_alias,'/');
                    $next_post .=   '<div class="next-product">
                                        <a href="'.base_path().$path_alias_cs.'" class="active">next</a>
                                    </div>';
                    $i++;
                }   
            }
            $vars['next_post'] = $next_post;
            //next post end
            //Previous post start
            $storage = \Drupal::entityManager()->getStorage('node');
            $nids = $storage->getQuery()
                ->condition('type', 'product')
                ->condition('status', 1)
                ->condition('nid',$node->nid->value, '!=')
                ->condition('changed', $node->changed->value, '<')
                ->range(0,1)
                ->execute();
                //print_r($nids);
            $previous_post = '';
            $i = 0;
            foreach (entity_load_multiple('node',$nids) as $key => $n) {
                if($i > 0){
                    break;
                }else{
                    $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$n->nid->value);
                    $path_alias_cs = ltrim($path_alias,'/');
                    $previous_post .= ' <div class="prev-product">
                                            <a href="'.base_path().$path_alias_cs.'">prev</a>
                                        </div>';
                    $i++;
                }   
            }
            $vars['previous_post'] = $previous_post;
            //Previous post end
        }
    }
}
function toux_preprocess_html(&$vars) {
    $theme = \Drupal::theme()->getActiveTheme()->getName();
    $vars['attributes']['class'][] = 'ltr';
    $vars['general_setting_tracking_code'] = theme_get_setting('general_setting_tracking_code', $theme);
    $vars['custom_css'] = theme_get_setting('custom_css', $theme);
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $ntype = $node->getType();
        $node_id = $node->id();
        if ($ntype == 'blog_post') {
            $vars['class_body'] = "blog-pagev1 detail";
        } elseif ($ntype == 'page'){
            $vars['class_body'] = "cms-page about-us";
        }elseif (($ntype == 'home_page')&& ($node_id == '7')){
            $vars['class_body'] = "cms-index-index cms-toux-home-page-v3 homepage";
        }elseif ($ntype == 'product'){
            $vars['class_body'] = " no1-products-detail1 default cmspage";
        }else {
            $vars['class_body'] = 'cms-index-index cms-toux-home-page-v2 homepage logo2';
        }
    } else {
        $vars['class_body'] = ' blog-pagev1';
    }
}
/**
* Implements template_preprocess_page().
*/
function toux_preprocess_page(&$vars) {

global $base_url;
    if (!empty(theme_get_setting('logo_site_file', 'toux'))) {
    $vars['logo_site'] = $base_url . theme_get_setting('logo_site_file', 'toux');
    } else {
    $vars['logo_site'] = '';
    }
    // ////
    // if (!empty(theme_get_setting('logo_banner_file', 'toux'))) {
    // $vars['logo_banner'] = $base_url . theme_get_setting('logo_banner_file', 'toux');
    // } else {
    // $vars['logo_banner'] = '';
    // }
    ///////
    if (isset($_GET['style'])) {
    $vars['blog_style'] = $_GET['style'];
    } else {
    $vars['blog_style'] = theme_get_setting('blog_style', 'toux');
    }


    $theme = \Drupal::theme()->getActiveTheme()->getName();
    $vars['theme_path'] = '/'.drupal_get_path('theme', $theme);
    $request = \Drupal::request();
    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $vars['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
    }

    if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $term_id = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
    $term = taxonomy_term_load($term_id);
    //$term_name = $term_object->get('name')->value;
    $vars['current_term'] = $term;
    }
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $vars['type'] = $node->getType();
    }
}
function toux_form_search_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    unset($form['search_block_form']['#title']); // remove label form
    $form['actions']['submit']['#value'] = t('Go'); // Change the text on the submit button
}
function toux_preprocess_container(&$vars) {
    $vars['container_type'] = $vars['element']['#type'];
}